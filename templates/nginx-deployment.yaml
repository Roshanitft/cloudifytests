apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cloudifytests.name" . }}-nginx
  labels:
    app: {{ template "cloudifytests.name" . }}-nginx
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.nginx.replicas }}
  minReadySeconds: {{ .Values.nginx.minReadySeconds }}
  selector:
    matchLabels:
      app: {{ template "cloudifytests.name" . }}-nginx
  strategy:
  {{- if .Values.nginx.strategy }}
  {{ toYaml .Values.nginx.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "cloudifytests.name" . }}-nginx
        release: "{{ .Release.Name }}"
        instance_id: {{ .Values.instanceID | quote }}
        {{- if .Values.nginx.podLabels }}
        {{ toYaml.Values.nginx.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ tpl (.Files.Get "files/cloudifytests-nginx.conf") . | sha256sum }}
        {{- if .Values.nginx.podAnnotations  }}
        {{ toYaml.Values.nginx.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - image: {{ template "nginx.image" . }}
        name: nginx
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
        - containerPort: 80
        resources:
{{ toYaml .Values.nginx.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: {{ .Values.nginx.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nginx.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.nginx.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.nginx.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.nginx.readinessProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: {{ .Values.nginx.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nginx.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.nginx.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.nginx.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.nginx.livenessProbe.failureThreshold }}
        volumeMounts:
          - name: cloudifytests-nginx-config
            mountPath: /etc/nginx/conf.d
          # - name: nginx-pv-storage
          #   mountPath: /var/opt/cloudify/build/
      - image: {{ template "nginx.prometheusExporter.image" . }}
        name: nginx-prometheus-exporter
        imagePullPolicy: {{ .Values.nginx.prometheusExporter.image.pullPolicy }}
        ports:
          - containerPort: 9113
        args: ["-nginx.scrape-uri=http://127.0.0.1/stub_status"]
      affinity:
{{- if .Values.nginx.affinity }}
{{ toYaml .Values.nginx.affinity | indent 8  }}
{{- end }}
      tolerations:
{{- if .Values.nginx.tolerations }}
{{ toYaml .Values.nginx.tolerations | indent 8  }}
{{- end }}
      volumes:
      {{- with .Values.nginx.volumes }}
      {{ toYaml .Values.nginx.volumes | indent 8 }}
      {{- end }}
      volumes:
        - name: cloudifytests-nginx-config
          configMap:
            name: {{ template "cloudifytests.name" . }}-nginx-configmap
        # - name: nginx-pv-storage
        #   persistentVolumeClaim:
        #     claimName: nginx-pv-claim   

---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "cloudifytests.name" . }}-nginx
  labels:
    app: {{ template "cloudifytests.name" . }}-nginx
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  type: {{ .Values.nginx.service.type }}
  {{- if not .Values.nginx.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.nginx.service.loadBalancerIP }}
  {{- end }}
  ports:
  - name: nginx
    port: 80
    protocol: TCP
    targetPort: 80
  - name: nginx-exporter
    port: 9113
    protocol: TCP
    targetPort: 9113
  selector:
    app: {{ template "cloudifytests.name" . }}-nginx
    release: {{ .Release.Name }}


---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudifytests-nginx 
  namespace: {{ .Values.nginxhpa.metadata.namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudifytests-nginx 
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: AverageValue
        averageValue: 100m
  - type: Resource
    resource:
      name: memory
      target:
        type: AverageValue
        averageValue: 200Mi
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 100
      policies:
        - type: Pods
          value: 1
          periodSeconds: 15
        - type: Percent
          value: 10
          periodSeconds: 15
      selectPolicy: Min                 
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Pods
          value: 1
          periodSeconds: 10
        - type: Percent
          value: 100
          periodSeconds: 15
      selectPolicy: Max
                    
